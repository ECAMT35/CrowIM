server:
#port: TODO

spring:
  application:
    name: user-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
#url: TODO
#username: TODO
#password: TODO

  data:
    redis:
#host: TODO
      database: 0
#port: TODO
#password: TODO
      timeout: 10s
      lettuce:
        pool:
          max-active: 500
          max-wait: -1ms
          max-idle: 10
          min-idle: 0

  rabbitmq:
#host: TODO
#port: TODO
#username: TODO
#password: TODO

    # 生产者重试机制
    connection-timeout: 3s # 设置MQ的连接超时时间
    template:
      retry:
        enabled: true # 开启超时重试机制
        initial-interval: 1000ms # 失败后的初始等待时间
        multiplier: 2 # 失败后下次的等待时长倍数，下次等待时长 = initial-interval * multiplier
        max-attempts: 3 # 最大重试次数

    # 消费者确认机制
    listener:
      simple:
        prefetch: 1 # 消费者一次性从队列中拉取多少条消息进行处理
        acknowledge-mode: auto # 自动消费者自动 ack 模式

        retry:
          enabled: true # 开启消费者本地失败重试
          initial-interval: 1000ms # 初始的失败等待时长为1秒
          multiplier: 2 # 失败的等待时长倍数，下次等待时长 = multiplier * last-interval
          max-attempts: 3 # 最大重试次数
          stateless: true # true无状态；false有状态。如果业务中包含事务，这里改为false

  servlet:
    multipart:
      max-file-size: 32MB
      max-request-size: 64MB

  mail:
    # 指定邮件服务器地址
#host: TODO
    # 登录账户
#username: TODO
    # 登录密码
#password: TODO
    # 端口
#port: TODO
    # 默认编码
    default-encoding: UTF-8
    # 使用的协议
    protocol: smtps
    # 其他的属性
    properties:
      "mail.smtp.connectiontimeout": 5000
      "mail.smtp.timeout": 5000
      "mail.smtp.writetimeout": 10000
      "mail.smtp.auth": true
      "mail.smtp.starttls.enable": true
      "mail.smtp.starttls.required": true

  freemarker:
    cache: true # 缓存配置 开发阶段应该配置为false 因为经常会改
    suffix: .html # 模版后缀名 默认为ftl
    charset: UTF-8 # 文件编码
    template-loader-path: classpath:/templates/  # 存放模板的文件夹，以resource文件夹为相对路径

sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: seed
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true

logging:
  level:
    root: info

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.ecamt35.userservice.controller
knife4j:
  enable: true
  setting:
    language: zh_cn

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.ecamt35.userservice.model.entity
  global-config:
    db-config:
      id-type: auto # 实体类的@TableId注解 type 参数改为 auto,使用数据库自增 ID 作为主键。
      logic-delete-field: isDeleted # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)

snowflake:
  worker-id: 1
  data-center-id: 1